"""vacancies

Revision ID: 96495df9ff1f
Revises: 366ccc21acb2
Create Date: 2024-10-05 09:58:18.103460

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '96495df9ff1f'
down_revision: Union[str, None] = '366ccc21acb2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('skills',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('vacancies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('deadline', sa.DateTime(), nullable=False),
    sa.Column('profession', sa.Text(), nullable=False),
    sa.Column('area', sa.Text(), nullable=False),
    sa.Column('supervisor', sa.Text(), nullable=False),
    sa.Column('city', sa.Text(), nullable=False),
    sa.Column('experience_from', sa.Integer(), nullable=False),
    sa.Column('experience_to', sa.Integer(), nullable=False),
    sa.Column('education', sa.Text(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('type_of_employment', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vacancy_skills',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('vacancy_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('is_key_skill', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('vacancys')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('vacancys',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('source', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('city', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('specialization', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('area', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('experience_from', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('experience_to', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type_of_employment', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('key_skills', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='vacancys_pkey')
    )
    op.drop_table('vacancy_skills')
    op.drop_table('vacancies')
    op.drop_table('skills')
    # ### end Alembic commands ###
